{"version":3,"sources":["components/DataProvider.js","components/Footer.js","components/FormInput.js","components/ListItem.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","DataProvider","props","useState","todos","setTodos","useEffect","todoStore","JSON","parse","localStorage","getItem","setItem","stringify","Provider","value","children","Footer","checkAll","setCheckAll","useContext","length","className","htmlFor","type","name","id","onClick","newTodos","forEach","todo","complete","console","log","checked","filter","FormInput","todoName","setTodoName","todoInput","useRef","current","focus","autoComplete","onSubmit","e","preventDefault","Math","floor","random","ref","required","placeholder","onChange","target","toLowerCase","ListItem","checkComplete","handleEditTodos","onEdit","setOnEdit","editValue","setEditValue","handleSave","disabled","splice","handleOnDelete","List","switchComplete","index","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7ecb3b8.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\r\n\r\nexport const DataContext = createContext()\r\n\r\nexport const DataProvider = (props) => {\r\n    const [todos, setTodos] = useState([\r\n\r\n    ])\r\n\r\n    useEffect(() => {\r\n        const todoStore = JSON.parse(localStorage.getItem('todoStore'))\r\n        if (todoStore) setTodos(todoStore)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todoStore', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n\r\n    return (\r\n        <DataContext.Provider value={[todos, setTodos]}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { DataContext } from './DataProvider'\r\n\r\nconst Footer = () => {\r\n    const [checkAll, setCheckAll] = useState(false)\r\n    const [todos, setTodos] = useContext(DataContext)\r\n\r\n    const handleCheckAll = () => {\r\n        const newTodos = [...todos]\r\n        newTodos.forEach(todo => {\r\n            todo.complete = !checkAll\r\n        })\r\n        setTodos(newTodos)\r\n        setCheckAll(!checkAll)\r\n        console.log(todos)\r\n    }\r\n\r\n    const newTodosComplete = () => {\r\n        return todos.filter(todo => todo.complete === false)\r\n    }\r\n\r\n    const handleDeleteAll = () => {\r\n        setTodos([])\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                todos.length === 0 ? <h2>Congratulations! Nothings to do</h2>\r\n                    :\r\n                    <div className='row'>\r\n                        <label htmlFor=\"all\">\r\n                            <input type=\"checkbox\" name='all' id='all'\r\n                                onClick={handleCheckAll} checked={checkAll} />\r\n                            All\r\n                        </label>\r\n                        <p>You have {newTodosComplete().length} to do</p>\r\n                        <button className=\"DeleteAll\"\r\n                            onClick={handleDeleteAll}>Delete All</button>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { DataContext } from './DataProvider'\r\n\r\n\r\nconst FormInput = () => {\r\n    const [todos, setTodos] = useContext(DataContext)\r\n    const [todoName, setTodoName] = useState('')\r\n    const todoInput = useRef()\r\n\r\n    const addTodo = e => {\r\n        e.preventDefault()\r\n        setTodos([...todos, { id: Math.floor(Math.random() * 10000), name: todoName, complete: false }])\r\n        setTodoName('')\r\n        todoInput.current.focus()\r\n    }\r\n\r\n    useEffect(() => {\r\n        todoInput.current.focus()\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <form autoComplete=\"off\" onSubmit={addTodo}>\r\n                <input type=\"text\" name=\"todos\" id='todos'\r\n                    ref={todoInput}\r\n                    required placeholder='What needs to be done?'\r\n                    value={todoName}\r\n                    onChange={e => setTodoName(e.target.value.toLowerCase())} />\r\n                <button type='submit'>Create</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput\r\n","import React, { useContext, useState } from 'react'\r\nimport { DataContext } from './DataProvider'\r\n\r\nconst ListItem = ({ todo, id, checkComplete, handleEditTodos }) => {\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [editValue, setEditValue] = useState(todo.name)\r\n    const [todos, setTodos] = useContext(DataContext)\r\n     const handleOnEdit = id => {\r\n        setOnEdit(true)\r\n    }\r\n\r\n    const handleSave = id => {\r\n        setOnEdit(false)\r\n        if (editValue)\r\n            handleEditTodos(editValue, id)\r\n        else\r\n            setEditValue(todo.name)\r\n    }\r\n\r\n    const handleOnDelete = id => {\r\n        const newTodos = [...todos]\r\n        if (id !== -1) {\r\n            newTodos.splice(id,1)\r\n        }\r\n        setTodos(newTodos)\r\n        console.log(todos)\r\n    }\r\n\r\n    if (onEdit) {\r\n        return (\r\n            <li>\r\n                <input type=\"text\" id='editValue' value={editValue}\r\n                    name='editValue'\r\n                    onChange={e => setEditValue(e.target.value.toLowerCase())} />\r\n\r\n                <button onClick={() => handleSave(todo.id)}>Save</button>\r\n            </li>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <li>\r\n                <label\r\n                    htmlFor={todo.id}\r\n                    className={todo.complete ? 'active' : ''}\r\n\r\n                >\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id={todo.id}\r\n                        checked={todo.complete}\r\n                        onChange={() => checkComplete(id)} />\r\n                    {todo.name}\r\n                </label>\r\n                <div>\r\n                    <button\r\n                        className='Edit'\r\n                        disabled={todo.complete}\r\n                        onClick={handleOnEdit}\r\n                    >\r\n                        Edit\r\n                    </button>\r\n                    <button className='Delete' onClick={() => handleOnDelete(id)}>Delete</button>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListItem\r\n","import React, { useContext } from 'react'\r\nimport ListItem from './ListItem'\r\nimport { DataContext } from './DataProvider'\r\n\r\n\r\nconst List = () => {\r\n    const [todos, setTodos] = useContext(DataContext)\r\n    const switchComplete = id => {\r\n        const newTodos = [...todos]\r\n        newTodos.forEach((todo, index) => {\r\n            if(index === id) {\r\n                todo.complete = !todo.complete\r\n            }\r\n        })\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    const handleEditTodos = (editValue, id) => {\r\n        const newTodos = [...todos]\r\n        newTodos.forEach((todo) => {\r\n            if(todo.id === id) {\r\n                todo.name = editValue\r\n            }\r\n        })\r\n        setTodos(newTodos)\r\n    }\r\n    return (\r\n        <ul>\r\n            {\r\n                todos.map((todo, index) => (\r\n                    <ListItem todo={todo} key={index} id={index}\r\n                    checkComplete={switchComplete}\r\n                    handleEditTodos={handleEditTodos}/>\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List\r\n","import React from \"react\";\nimport Footer from \"./components/Footer\";\nimport FormInput from \"./components/FormInput\";\nimport List from \"./components/List\";\nimport { DataProvider } from \"./components/DataProvider\"\n\nfunction App() {\n  return (\n    <DataProvider>\n      <div className='App'>\n        <h1>To do List</h1>\n        <FormInput />\n        <List />\n        <Footer />\n      </div>\n    </DataProvider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}