{"version":3,"sources":["service/index.js","service/task.service.js","components/DataProvider.js","components/Footer.js","components/FormInput.js","components/ListItem.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["fetcher","options","baseURL","axios","create","headers","Authorization","then","response","catch","error","Promise","reject","message","getAllTaskAPI","a","url","res","err","console","log","updateTaskByIdAPI","id","completed","method","data","deleteTaskByIdAPI","addTaskAPI","description","DataContext","createContext","DataProvider","props","useState","todos","setTodos","useEffect","length","mapData","map","todo","_id","getAllTask","Provider","value","children","Footer","checkAll","setCheckAll","useContext","newTodosComplete","useCallback","filter","updateTaskById","deleteTaskById","className","htmlFor","type","name","onClick","newTodos","forEach","checked","FormInput","todoName","setTodoName","todoInput","useRef","addTask","addTodo","e","preventDefault","current","focus","autoComplete","onSubmit","ref","required","placeholder","onChange","target","toLowerCase","ListItem","checkComplete","handleEditTodos","onEdit","setOnEdit","editValue","setEditValue","handleOnDelete","handleSave","disabled","List","switchComplete","index","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3721e2f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n// uar chua cai axios a\r\n// :V \r\n// clm cai di thg lone :v k can huy\r\n// split terminal ra\r\n// nos goi y :v,\r\n// a co r ma wtf\r\n// thì import có mà dkm\r\n// wwtf\r\nconst baseURL = 'https://api-nodejs-todolist.herokuapp.com/';\r\n\r\nconst createClient = (baseURL) => {\r\n  return axios.create({\r\n    baseURL,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTA3ZGI0MDM4ZTdhNzAwMTcyMmE5NjAiLCJpYXQiOjE2Mjc5MDQ4MzJ9.voZzDJElzFQu_uW9dyvuHR-0250p3dOHuuSYxdydtvc`\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetcher = (options) => {\r\n  const onSuccess = response => response;\r\n  const onError = error => Promise.reject(error.response || error.message);\r\n  const client = createClient(baseURL);\r\n  return client(options).then(onSuccess).catch(onError);\r\n}\r\n\r\nexport default fetcher;","import fetcher from \"./index.js\";\r\n\r\nexport const getAllTaskAPI = async () => {\r\n  return await fetcher({\r\n    url: \"task\"\r\n  })\r\n    .then((res) => res)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateTaskByIdAPI = async ({id,completed})=>{\r\n  return await fetcher({\r\n    url:`task/${id}`,\r\n    method:'PUT',\r\n    data:{\r\n      completed\r\n    }\r\n  })\r\n}\r\n\r\nexport const deleteTaskByIdAPI = async (id) => {\r\n  return await fetcher({\r\n    url:`task/${id}`,\r\n    method:'DELETE'\r\n  })\r\n}\r\n\r\nexport const addTaskAPI = async (description) => {\r\n  return await fetcher({\r\n    url:'task',\r\n    method:'POST',\r\n    data: {\r\n      description\r\n    }\r\n  })\r\n}\r\n\r\n\r\n// \r\n// này nó update được completed thôi k update được cái description","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { getAllTaskAPI } from \"service/task.service\";\r\n//alo, còn thấy gì k\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const DataProvider = (props) => {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    //  useEffect(() => {\r\n    //   const todoStore = JSON.parse(localStorage.getItem(\"todoStore\"));\r\n    //   if (todoStore) setTodos(todoStore);\r\n    //  }, []);\r\n\r\n    //  useEffect(() => {\r\n    //   localStorage.setItem(\"todoStore\", JSON.stringify(todos));\r\n    //  }, [todos]);\r\n\r\n    // :)) tiếp\r\n    // =]]]] dkm sáng cũng cấn\r\n    // choox naof chả như nhau, cái này đang bao quát rồi, cho nó bao quát cmn lu\r\n    useEffect(() => {\r\n        const getAllTask = async () => {\r\n            const {\r\n                data: { data }\r\n            } = await getAllTaskAPI();\r\n            console.log(data)\r\n            if (data.length > 0) {\r\n                const mapData = data.map((todo) => ({ ...todo, id: todo._id }));\r\n                setTodos(mapData);\r\n            }\r\n        };\r\n        getAllTask();\r\n    }, []);\r\n\r\n    return (\r\n        <DataContext.Provider value={[todos, setTodos]}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useState, useCallback, useEffect } from \"react\";\r\nimport { DataContext } from \"./DataProvider\";\r\nimport { updateTaskByIdAPI, deleteTaskByIdAPI } from \"service/task.service\";\r\n\r\nconst Footer = () => {\r\n  const [checkAll, setCheckAll] = useState(false);\r\n  const [todos, setTodos] = useContext(DataContext);\r\n\r\n\r\n  const newTodosComplete = useCallback(() => {\r\n    return todos.filter((todo) => todo.completed === false);\r\n  }, [todos]);\r\n\r\n  useEffect(() => {\r\n    // const isAllChecked = todos.find((todo) => todo.completed === false)\r\n    if (newTodosComplete().length > 0)\r\n      setCheckAll(false)\r\n    else setCheckAll(true)\r\n  }, [checkAll, newTodosComplete, todos])\r\n\r\n  const updateTaskById = async ({ id, completed }) => {\r\n    await updateTaskByIdAPI({ id, completed });\r\n  };\r\n\r\n  const deleteTaskById = async ( id ) => {\r\n    await deleteTaskByIdAPI( id );\r\n  };\r\n\r\n\r\n  const handleCheckAll = () => {\r\n    const newTodos = [...todos];\r\n    newTodos.forEach(async (todo) => {\r\n      todo.completed = !checkAll;\r\n      await updateTaskById({ id: todo.id, completed: todo.completed })\r\n    });\r\n    setTodos(newTodos);\r\n    setCheckAll(!checkAll);\r\n  };\r\n\r\n\r\n  const handleDeleteAll = () => {\r\n    const newTodos = [...todos];\r\n    newTodos.forEach(async (todo) => {\r\n      await deleteTaskById(todo.id)\r\n    });\r\n    setTodos([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {todos.length === 0 ? (\r\n        <h2>Congratulations! Nothings to do</h2>\r\n      ) : (\r\n        <div className=\"row\">\r\n          <label htmlFor=\"all\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"all\"\r\n              id=\"all\"\r\n              onClick={handleCheckAll}\r\n              checked={checkAll}\r\n            />\r\n            All\r\n          </label>\r\n          <p>You have {newTodosComplete().length} to do</p>\r\n          <button className=\"DeleteAll\" onClick={handleDeleteAll}>\r\n            Delete All\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { addTaskAPI, getAllTaskAPI } from 'service/task.service'\r\nimport { DataContext } from './DataProvider'\r\n\r\n\r\nconst FormInput = () => {\r\n    const [todos, setTodos] = useContext(DataContext)\r\n    const [todoName, setTodoName] = useState('')\r\n    const todoInput = useRef()\r\n    const addTask = async (description) => {\r\n        await addTaskAPI(description);\r\n    };\r\n\r\n    const getAllTask = async () => {\r\n        const {\r\n            data: { data }\r\n        } = await getAllTaskAPI();\r\n        if (data.length > 0) {\r\n            const mapData = data.map((todo) => ({ ...todo, id: todo._id }));\r\n            setTodos(mapData);\r\n        }\r\n    };\r\n    \r\n    const addTodo = async e => {\r\n        e.preventDefault()\r\n        await addTask(todoName)\r\n        getAllTask()\r\n        setTodoName('')\r\n        todoInput.current.focus()\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        todoInput.current.focus()\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <form autoComplete=\"off\" onSubmit={addTodo}>\r\n                <input type=\"text\" name=\"todos\" id='todos'\r\n                    ref={todoInput}\r\n                    required placeholder='What needs to be done?'\r\n                    value={todoName}\r\n                    onChange={e => setTodoName(e.target.value.toLowerCase())} />\r\n                <button type='submit'>Create</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput\r\n","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { deleteTaskByIdAPI } from \"service/task.service\";\r\nimport { DataContext } from \"./DataProvider\";\r\n\r\nconst ListItem = ({ todo, id, checkComplete, handleEditTodos }) => {\r\n  const [onEdit, setOnEdit] = useState(false);\r\n  const [editValue, setEditValue] = useState(todo.description);\r\n  const [todos, setTodos] = useContext(DataContext);\r\n\r\n  const deleteTaskById = useCallback(async ( id ) => {\r\n    await deleteTaskByIdAPI( id );\r\n  }, []);\r\n\r\n  const handleOnEdit = (id) => {\r\n    setOnEdit(true);\r\n  };\r\n\r\n  const handleSave = (id) => {\r\n    setOnEdit(false);\r\n    if (editValue) handleEditTodos(editValue, id);\r\n    else setEditValue(todo.description);\r\n  };\r\n\r\n  const handleOnDelete = async (id) => {\r\n    setTodos(todos.filter(todo => todo.id !== id));\r\n    await deleteTaskById(id)\r\n  };\r\n  //\r\n  if (onEdit) {\r\n    return (\r\n      <li>\r\n        <input\r\n          type=\"text\"\r\n          id=\"editValue\"\r\n          value={editValue}\r\n          name=\"editValue\"\r\n          onChange={(e) => setEditValue(e.target.value.toLowerCase())}\r\n        />\r\n\r\n        <button onClick={() => handleSave(todo.id)}>Save</button>\r\n      </li>\r\n    );\r\n  } else {\r\n    return (\r\n      <li className={todo.completed ? \"active\" : \"\"}>\r\n        <label htmlFor={todo.id} className={todo.completed ? \"active\" : \"\"}>\r\n          <input\r\n            type=\"checkbox\"\r\n            id={todo.id}\r\n            checked={todo.completed}\r\n            onChange={() => checkComplete(id)}\r\n          />\r\n          {todo.description}\r\n        </label>\r\n        <div>\r\n          <button\r\n            className=\"Edit\"\r\n            disabled={todo.completed}\r\n            onClick={handleOnEdit}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button className=\"Delete\" onClick={() => handleOnDelete(todo.id)}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { useContext, useCallback } from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport { DataContext } from \"./DataProvider\";\r\nimport { updateTaskByIdAPI} from \"service/task.service\";\r\n\r\nconst List = () => {\r\n    const [todos, setTodos] = useContext(DataContext);\r\n    const updateTaskById = useCallback(async ({ id, completed }) => {\r\n        await updateTaskByIdAPI({ id, completed });\r\n    }, []);\r\n    // mai có làm k?\r\n    // cos m \r\n    //nói chung là được rồi đó, nhưng còn cái rerender lại cái list, m tự nghĩ nhé,\r\n    // cấu trúc context t ít sài nên chưa biết solve sao :v\r\n    // oke :v để đó tự xử, nãy h cũng hiểu sơ sơ, code như lol :v \r\n    // ok luon, cấu trúc lại đi t thấy như lone thâjt :v, gì mà item sài cả context\r\n    // đm thg nào bày m bậy vl :v, cái item rõ là truyền vào thôi, éo cầN sài context đây\r\n    // cái này cái clip nó làm làm theo th ôi :v \r\n    // ok luôn t out nhé :v  ok :v\r\n    // :v để mai coi cái tut todo của th thái anh nó code theo rồi so thử\r\n    // ok cũng buonf ngủ, thôi nghỉ\r\n    const switchComplete = async (id) => {\r\n        console.log(id)\r\n        const newTodos = [...todos]\r\n        newTodos.forEach(async (todo) => {\r\n            if (todo.id === id) {\r\n                todo.completed = !todo.completed\r\n                //const currentTodo = todos.find((todo) => todo.id === id);\r\n                await updateTaskById({ id: todo.id, completed: todo.completed })\r\n            }\r\n        })\r\n        setTodos(newTodos)\r\n        // if (data) {\r\n        //     const {\r\n        //         data: { data }\r\n        //     } = data;\r\n        //     const mapTodo = todos.map((todo) => {\r\n        //         if (todo.id === id) {\r\n        //             return data;\r\n        //         }\r\n        //         return todo;\r\n        //     });\r\n        //     setCheck(!check)\r\n        //     setTodos(mapTodo);\r\n        // }\r\n    };\r\n\r\n    const handleEditTodos = (editValue, id) => {\r\n        const newTodos = [...todos];\r\n        newTodos.forEach((todo) => {\r\n            if (todo.id === id) {\r\n                todo.description = editValue;\r\n            }\r\n        });\r\n        setTodos(newTodos);\r\n    };\r\n    return (\r\n        <ul>\r\n            {todos.map((todo, index) => (\r\n                <ListItem\r\n                    todo={todo}\r\n                    key={index}\r\n                    id={todo.id}\r\n                    checkComplete={switchComplete}\r\n                    handleEditTodos={handleEditTodos}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport Footer from \"./components/Footer\";\r\nimport FormInput from \"./components/FormInput\";\r\nimport List from \"./components/List\";\r\nimport { DataProvider } from \"./components/DataProvider\"\r\n\r\nfunction App() {\r\n  return (\r\n    <DataProvider>\r\n      <div className='App'>\r\n        <h1>To do List</h1>\r\n        <FormInput />\r\n        <List />\r\n        <Footer />\r\n      </div>\r\n    </DataProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}