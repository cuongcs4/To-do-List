{"version":3,"sources":["service/index.js","service/task.service.js","components/DataProvider.js","components/login/Login.js","components/Navbar.js","screens/LoginScreen.js","components/Footer.js","components/FormInput.js","components/ListItem.js","components/List.js","screens/HomeScreens/HomeScreen.js","components/signup/Signup.js","screens/SignupScreen.js","App.js","reportWebVitals.js","index.js"],"names":["getToken","email","password","a","options","headers","method","url","data","axios","then","res","catch","error","response","accessToken","token","sessionStorage","setItem","signup","info","name","age","fetcher","getItem","create","baseURL","Authorization","createClient","client","Promise","reject","message","getAllTaskAPI","err","console","log","updateTaskByIdAPI","id","completed","deleteTaskByIdAPI","addTaskAPI","description","DataContext","createContext","DataProvider","props","useState","todos","setTodos","history","useHistory","useEffect","getAllTask","length","mapData","map","todo","_id","push","Provider","value","children","Login","setEmail","setPassword","show","setShow","setAccessToken","handleSubmit","e","preventDefault","status","includes","className","Alert","variant","onClose","dismissible","onSubmit","classname","type","placeholder","onChange","target","LoginNavbar","active","setActive","currentURL","window","location","href","endsWith","to","onClick","LoginScreen","Footer","checkAll","setCheckAll","useContext","newTodosComplete","useCallback","filter","updateTaskById","deleteTaskById","htmlFor","newTodos","forEach","checked","FormInput","todoName","setTodoName","todoInput","useRef","addTask","addTodo","current","focus","autoComplete","ref","required","toLowerCase","ListItem","checkComplete","handleEditTodos","onEdit","setOnEdit","editValue","setEditValue","handleOnDelete","handleSave","disabled","List","switchComplete","index","HomeScreen","removeItem","Signup","setInfo","handleChange","minLength","min","max","SignupScreen","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d610b58.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseURL = 'https://api-nodejs-todolist.herokuapp.com/';\r\n\r\n\r\n\r\nexport const getToken = async (email, password) => {\r\n  const options = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    method: \"POST\",\r\n    url: 'https://api-nodejs-todolist.herokuapp.com/user/login',\r\n    data: {\r\n      email,\r\n      password\r\n    }\r\n  }\r\n  const data = await axios(options).then(res => res).catch(error => error.response)\r\n  const accessToken = data.data.token\r\n  if (accessToken)\r\n    sessionStorage.setItem(\"tdl-token\", accessToken)\r\n  return data\r\n}\r\n\r\nexport const signup = async (info) => {\r\n  const options = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    method: \"POST\",\r\n    url: 'https://api-nodejs-todolist.herokuapp.com/user/register',\r\n    data: {\r\n      name: info.name,\r\n      email: info.email,\r\n      password: info.password,\r\n      age: info.age\r\n    }\r\n  }\r\n  const data = await axios(options)\r\n    .then(res => res)\r\n    .catch(error => error.response)\r\n  const accessToken = data.data.token\r\n  if (accessToken)\r\n    sessionStorage.setItem(\"tdl-token\", accessToken)\r\n  return data\r\n  // if (data) {\r\n  //   const accessToken = data.data.token\r\n  //   sessionStorage.setItem(\"tdl-token\", accessToken)\r\n  // }\r\n}\r\n\r\nexport const createClient = () => {\r\n  const accessToken = sessionStorage.getItem('tdl-token')\r\n  return axios.create({\r\n    baseURL,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${accessToken} `\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetcher = (options) => {\r\n  const onSuccess = response => response;\r\n  const onError = error => Promise.reject(error.response || error.message);\r\n  const client = createClient();\r\n  return client(options).then(onSuccess).catch(onError);\r\n}","import { fetcher } from './index'\r\n\r\nexport const getAllTaskAPI = async () => {\r\n  return await fetcher({\r\n    url: \"task\"\r\n  })\r\n    .then((res) => res)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateTaskByIdAPI = async ({ id, completed }) => {\r\n  return await fetcher({\r\n    url: `task/${id}`,\r\n    method: 'PUT',\r\n    data: {\r\n      completed\r\n    }\r\n  })\r\n}\r\n\r\nexport const deleteTaskByIdAPI = async (id) => {\r\n  return await fetcher({\r\n    url: `task/${id}`,\r\n    method: 'DELETE'\r\n  })\r\n}\r\n\r\nexport const addTaskAPI = async (description) => {\r\n  return await fetcher({\r\n    url: 'task',\r\n    method: 'POST',\r\n    data: {\r\n      description\r\n    }\r\n  })\r\n}\r\n\r\nexport const loginAPI = async (email, password) => {\r\n}\r\n\r\n\r\n// \r\n// này nó update được completed thôi k update được cái description","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getAllTaskAPI } from \"service/task.service\";\r\n//alo, còn thấy gì k\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const DataProvider = (props) => {\r\n    const [todos, setTodos] = useState([]);\r\n    const history = useHistory()\r\n    //  useEffect(() => {\r\n    //   const todoStore = JSON.parse(localStorage.getItem(\"todoStore\"));\r\n    //   if (todoStore) setTodos(todoStore);\r\n    //  }, []);\r\n\r\n    //  useEffect(() => {\r\n    //   localStorage.setItem(\"todoStore\", JSON.stringify(todos));\r\n    //  }, [todos]);\r\n\r\n    // :)) tiếp\r\n    // =]]]] dkm sáng cũng cấn\r\n    // choox naof chả như nhau, cái này đang bao quát rồi, cho nó bao quát cmn lu\r\n    useEffect(() => {\r\n        const getAllTask = async () => {\r\n            const {\r\n                data: { data }\r\n            } = await getAllTaskAPI();\r\n            if (data.length > 0) {\r\n                const mapData = data.map((todo) => ({ ...todo, id: todo._id }));\r\n                setTodos(mapData);\r\n            }\r\n        };\r\n        const accessToken = sessionStorage.getItem('tdl-token')\r\n        if (accessToken)\r\n            getAllTask();\r\n        else \r\n            history.push('/')\r\n    }, [history]);\r\n\r\n    return (\r\n        <DataContext.Provider value={[todos, setTodos]}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport './_login.scss'\r\nimport { getToken } from 'service'\r\n\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const history = useHistory()\r\n    const [show, setShow] = useState(false);\r\n    const [accessToken, setAccessToken] = useState(sessionStorage.getItem(\"tdl-token\"))\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(accessToken)\r\n        if (accessToken)\r\n            history.push(\"/my-task\")\r\n    }, [accessToken, history])\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    const handlePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        const data = await getToken(email, password)\r\n        if (data.status !== 200) {\r\n            if (data.data.includes('Unable to login')) {\r\n                setShow(true)\r\n            }\r\n        }\r\n        else {\r\n            setAccessToken(sessionStorage.getItem(\"tdl-token\"))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='login__form'>\r\n            {show ?\r\n                <Alert variant=\"warning\" onClose={() => setShow(false)} dismissible>\r\n                    <strong>Sorry!</strong> Your email or password is not correct\r\n                </Alert>\r\n                : null\r\n            }\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    classname='login__form__email'\r\n                    type=\"email\"\r\n                    placeholder='Email'\r\n                    value={email}\r\n                    onChange={handleEmail} />\r\n                <input\r\n                    className='login__form__password'\r\n                    type=\"password\"\r\n                    placeholder='Password'\r\n                    value={password}\r\n                    onChange={handlePassword} />\r\n                <button\r\n                    className='login__form__submit'\r\n                    type='submit'\r\n                    id='login-button'>\r\n                    Login\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Login\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst LoginNavbar = () => {\r\n    const [active, setActive] = useState('')\r\n    useEffect(() => {\r\n        let currentURL = window.location.href\r\n        console.log(currentURL)\r\n\r\n        if (currentURL.endsWith('/'))\r\n            setActive('Login')\r\n        else if (currentURL.endsWith('/sign-up'))\r\n            setActive('Sign up')\r\n    }, [active])\r\n\r\n    return (\r\n        <div className='headbar'>\r\n            <div className='headbar__items'>\r\n                <Link to='/'>\r\n                    <div className={active === 'Login' ? \"headbar__item active\" : \"headbar__item\"}\r\n                        onClick={() => setActive('Login')}>Login\r\n                    </div>\r\n                </Link>\r\n                <Link to='/sign-up'>\r\n                    <div className={active === 'Sign up' ? \"headbar__item active\" : \"headbar__item\"}\r\n                        onClick={() => setActive('Sign up')}>Sign up\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginNavbar\r\n","import React from 'react'\r\nimport Login from 'components/login/Login'\r\nimport LoginNavbar from 'components/Navbar'\r\n\r\nconst LoginScreen = () => {\r\n    return (\r\n        <div className='loginScreen'>\r\n            <div className='login-wrapper'>\r\n                <div className='login'>\r\n                    <h1>Welcome</h1>\r\n                    <LoginNavbar />\r\n                    <Login />   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useContext, useState, useCallback, useEffect } from \"react\";\r\nimport { DataContext } from \"./DataProvider\";\r\nimport { updateTaskByIdAPI, deleteTaskByIdAPI } from \"service/task.service\";\r\n\r\nconst Footer = () => {\r\n  const [checkAll, setCheckAll] = useState(false);\r\n  const [todos, setTodos] = useContext(DataContext);\r\n\r\n\r\n  const newTodosComplete = useCallback(() => {\r\n    return todos.filter((todo) => todo.completed === false);\r\n  }, [todos]);\r\n\r\n  useEffect(() => {\r\n    // const isAllChecked = todos.find((todo) => todo.completed === false)\r\n    if (newTodosComplete().length > 0)\r\n      setCheckAll(false)\r\n    else setCheckAll(true)\r\n  }, [checkAll, newTodosComplete, todos])\r\n\r\n  const updateTaskById = async ({ id, completed }) => {\r\n    await updateTaskByIdAPI({ id, completed });\r\n  };\r\n\r\n  const deleteTaskById = async ( id ) => {\r\n    await deleteTaskByIdAPI( id );\r\n  };\r\n\r\n\r\n  const handleCheckAll = () => {\r\n    const newTodos = [...todos];\r\n    newTodos.forEach(async (todo) => {\r\n      todo.completed = !checkAll;\r\n      await updateTaskById({ id: todo.id, completed: todo.completed })\r\n    });\r\n    setTodos(newTodos);\r\n    setCheckAll(!checkAll);\r\n  };\r\n\r\n\r\n  const handleDeleteAll = () => {\r\n    const newTodos = [...todos];\r\n    newTodos.forEach(async (todo) => {\r\n      await deleteTaskById(todo.id)\r\n    });\r\n    setTodos([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {todos.length === 0 ? (\r\n        <h2>Congratulations! Nothings to do</h2>\r\n      ) : (\r\n        <div className=\"footer-wrapper\">\r\n          <label htmlFor=\"all\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"all\"\r\n              id=\"all\"\r\n              onClick={handleCheckAll}\r\n              checked={checkAll}\r\n            />\r\n            All\r\n          </label>\r\n          <p>You have {newTodosComplete().length} to do</p>\r\n          <button className=\"DeleteAll\" onClick={handleDeleteAll}>\r\n            Delete All\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { addTaskAPI, getAllTaskAPI } from 'service/task.service'\r\nimport { DataContext } from './DataProvider'\r\n\r\n\r\nconst FormInput = () => {\r\n    const [todos, setTodos] = useContext(DataContext)\r\n    const [todoName, setTodoName] = useState('')\r\n    const todoInput = useRef()\r\n    const addTask = async (description) => {\r\n        await addTaskAPI(description);\r\n    };\r\n\r\n    const getAllTask = async () => {\r\n        const {\r\n            data: { data }\r\n        } = await getAllTaskAPI();\r\n        if (data.length > 0) {\r\n            const mapData = data.map((todo) => ({ ...todo, id: todo._id }));\r\n            setTodos(mapData);\r\n        }\r\n    };\r\n    \r\n    const addTodo = async e => {\r\n        e.preventDefault()\r\n        await addTask(todoName)\r\n        getAllTask()\r\n        setTodoName('')\r\n        todoInput.current.focus()\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        todoInput.current.focus()\r\n    })\r\n\r\n    return (\r\n        <div className='form-wrapper'>\r\n            <form className='form-body' autoComplete=\"off\" onSubmit={addTodo}>\r\n                <input className='form-body__create' type=\"text\" name=\"todos\" id='todos'\r\n                    ref={todoInput}\r\n                    required placeholder='What needs to be done?'\r\n                    value={todoName}\r\n                    onChange={e => setTodoName(e.target.value.toLowerCase())} />\r\n                <button className='form-body__submit' type='submit'>Create</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput\r\n","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { deleteTaskByIdAPI } from \"service/task.service\";\r\nimport { DataContext } from \"./DataProvider\";\r\n\r\nconst ListItem = ({ todo, id, checkComplete, handleEditTodos }) => {\r\n  const [onEdit, setOnEdit] = useState(false);\r\n  const [editValue, setEditValue] = useState(todo.description);\r\n  const [todos, setTodos] = useContext(DataContext);\r\n\r\n  const deleteTaskById = useCallback(async ( id ) => {\r\n    await deleteTaskByIdAPI( id );\r\n  }, []);\r\n\r\n  const handleOnEdit = (id) => {\r\n    setOnEdit(true);\r\n  };\r\n\r\n  const handleSave = (id) => {\r\n    setOnEdit(false);\r\n    if (editValue) handleEditTodos(editValue, id);\r\n    else setEditValue(todo.description);\r\n  };\r\n\r\n  const handleOnDelete = async (id) => {\r\n    setTodos(todos.filter(todo => todo.id !== id));\r\n    await deleteTaskById(id)\r\n  };\r\n  //\r\n  if (onEdit) {\r\n    return (\r\n      <li>\r\n        <input\r\n          type=\"text\"\r\n          id=\"editValue\"\r\n          value={editValue}\r\n          name=\"editValue\"\r\n          onChange={(e) => setEditValue(e.target.value.toLowerCase())}\r\n        />\r\n\r\n        <button onClick={() => handleSave(todo.id)}>Save</button>\r\n      </li>\r\n    );\r\n  } else {\r\n    return (\r\n      <li className={todo.completed ? \"active\" : \"\"}>\r\n        <label htmlFor={todo.id} className={todo.completed ? \"active\" : \"\"}>\r\n          <input\r\n            type=\"checkbox\"\r\n            id={todo.id}\r\n            checked={todo.completed}\r\n            onChange={() => checkComplete(id)}\r\n          />\r\n          {todo.description}\r\n        </label>\r\n        <div>\r\n          <button\r\n            className=\"Edit\"\r\n            disabled={todo.completed}\r\n            onClick={handleOnEdit}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button className=\"Delete\" onClick={() => handleOnDelete(todo.id)}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { useContext, useCallback } from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport { DataContext } from \"./DataProvider\";\r\nimport { updateTaskByIdAPI } from \"service/task.service\";\r\n\r\nconst List = () => {\r\n    const [todos, setTodos] = useContext(DataContext);\r\n    const updateTaskById = useCallback(async ({ id, completed }) => {\r\n        await updateTaskByIdAPI({ id, completed });\r\n    }, []);\r\n    // mai có làm k?\r\n    // cos m \r\n    //nói chung là được rồi đó, nhưng còn cái rerender lại cái list, m tự nghĩ nhé,\r\n    // cấu trúc context t ít sài nên chưa biết solve sao :v\r\n    // oke :v để đó tự xử, nãy h cũng hiểu sơ sơ, code như lol :v \r\n    // ok luon, cấu trúc lại đi t thấy như lone thâjt :v, gì mà item sài cả context\r\n    // đm thg nào bày m bậy vl :v, cái item rõ là truyền vào thôi, éo cầN sài context đây\r\n    // cái này cái clip nó làm làm theo th ôi :v \r\n    // ok luôn t out nhé :v  ok :v\r\n    // :v để mai coi cái tut todo của th thái anh nó code theo rồi so thử\r\n    // ok cũng buonf ngủ, thôi nghỉ\r\n    const switchComplete = async (id) => {\r\n        console.log(id)\r\n        const newTodos = [...todos]\r\n        newTodos.forEach(async (todo) => {\r\n            if (todo.id === id) {\r\n                todo.completed = !todo.completed\r\n                //const currentTodo = todos.find((todo) => todo.id === id);\r\n                await updateTaskById({ id: todo.id, completed: todo.completed })\r\n            }\r\n        })\r\n        setTodos(newTodos)\r\n        // if (data) {\r\n        //     const {\r\n        //         data: { data }\r\n        //     } = data;\r\n        //     const mapTodo = todos.map((todo) => {\r\n        //         if (todo.id === id) {\r\n        //             return data;\r\n        //         }\r\n        //         return todo;\r\n        //     });\r\n        //     setCheck(!check)\r\n        //     setTodos(mapTodo);\r\n        // }\r\n    };\r\n\r\n    const handleEditTodos = (editValue, id) => {\r\n        const newTodos = [...todos];\r\n        newTodos.forEach((todo) => {\r\n            if (todo.id === id) {\r\n                todo.description = editValue;\r\n            }\r\n        });\r\n        setTodos(newTodos);\r\n    };\r\n    return (\r\n        <div className='list-wrapper'>\r\n            <ul className='list-body'>\r\n                {todos.map((todo, index) => (\r\n                    <ListItem\r\n                        todo={todo}\r\n                        key={index}\r\n                        id={todo.id}\r\n                        checkComplete={switchComplete}\r\n                        handleEditTodos={handleEditTodos}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Footer from '../../components/Footer'\r\nimport FormInput from '../../components/FormInput'\r\nimport List from '../../components/List'\r\nimport './_homeScreen.scss'\r\n\r\nconst HomeScreen = () => {\r\n    const history = useHistory()\r\n    \r\n    const [accessToken, setAccessToken] = useState(sessionStorage.getItem('tdl-token'))\r\n\r\n    useEffect(() => {\r\n        if (accessToken === '')\r\n            history.push('/')\r\n    }, [accessToken, history])\r\n\r\n    const handleLogout = () => {\r\n        sessionStorage.removeItem('tdl-token')\r\n        setAccessToken('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='homescreen'>\r\n            <h1>To do List</h1>\r\n            <FormInput />\r\n            <List />\r\n            <Footer />\r\n            <div className='row'>\r\n                <button className=\"Logout\" onClick={handleLogout}>\r\n                    Log out\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport './_signup.scss'\r\nimport '../login/_login.scss'\r\nimport { signup } from 'service'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Signup = () => {\r\n    const [info, setInfo] = useState({\r\n        email: '',\r\n        password: '',\r\n        name: '',\r\n        age: ''\r\n\r\n    })\r\n    const [accessToken, setAccessToken] = useState(sessionStorage.getItem('tdl-token'))\r\n    const [show, setShow] = useState(false);\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (accessToken)\r\n            history.push(\"/my-task\")\r\n    }, [accessToken, history])\r\n\r\n    const handleChange = (e) => {\r\n        setInfo({ ...info, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        const data = await signup(info)\r\n        if (data.status !== 201) {\r\n            if (data.data.includes('duplicate')) {\r\n                setShow(true)\r\n            }\r\n        }\r\n        else {\r\n            setAccessToken(sessionStorage.getItem(\"tdl-token\"))\r\n        }\r\n        //console.log(response)\r\n        //const isValid = response.json()\r\n        // console.log(isValid)\r\n        // if (isValid)\r\n        //     alert('Email has been used!!')\r\n\r\n        //await getToken(email, password)\r\n        // const accessToken = sessionStorage.getItem(\"tdl-token\")\r\n        // try {\r\n        //     if (accessToken)\r\n        //         history.push(\"/my-task\");\r\n        // } catch (e) {\r\n        //     alert(e.message);\r\n        // }    \r\n    }\r\n\r\n    return (\r\n        <div className='signup__form'>\r\n            {show ?\r\n                <Alert variant=\"warning\" onClose={() => setShow(false)} dismissible>\r\n                    <strong>Sorry!</strong> Your email has been used :(\r\n                </Alert>\r\n                : null\r\n            }\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    classname='signup__form__email'\r\n                    name='email'\r\n                    type=\"email\"\r\n                    placeholder='Email'\r\n                    value={info.email}\r\n                    onChange={handleChange}\r\n                    required />\r\n                <input\r\n                    className='signup__form__password'\r\n                    name='password'\r\n                    type=\"password\"\r\n                    placeholder='Password'\r\n                    value={info.password}\r\n                    onChange={handleChange}\r\n                    minLength='7'\r\n                    required />\r\n                <input\r\n                    className='signup__form__name'\r\n                    name='name'\r\n                    type=\"text\"\r\n                    placeholder='Name'\r\n                    value={info.name}\r\n                    onChange={handleChange}\r\n                    required />\r\n                <input\r\n                    className='signup__form__age'\r\n                    name='age'\r\n                    type=\"number\"\r\n                    placeholder='Age'\r\n                    value={info.age}    \r\n                    min=\"1\" max=\"100\"\r\n                    onChange={handleChange}\r\n                    required />\r\n                <button\r\n                    className='signup__form__submit'\r\n                    type='submit'\r\n                    id='login-button'>\r\n                    Sign up\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React from 'react'\r\nimport LoginNavbar from 'components/Navbar'\r\nimport Signup from 'components/signup/Signup'\r\n\r\n\r\nconst SignupScreen = () => {\r\n    return (\r\n        <div className='signupScreen'>\r\n            <div className='signup-wrapper'>\r\n                <div className='signup'>\r\n                    <h1>Welcome</h1>\r\n                    <LoginNavbar />\r\n                    <Signup />   \r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignupScreen\r\n","import React from \"react\";\r\nimport { DataProvider } from \"./components/DataProvider\"\r\nimport LoginScreen from \"screens/LoginScreen\";\r\nimport HomeScreen from \"screens/HomeScreens/HomeScreen\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\r\nimport SignupScreen from \"screens/SignupScreen\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    // <DataProvider>\r\n    //   <div className='App'>\r\n    //     <h1>To do List</h1>\r\n    //     <FormInput />\r\n    //     <List />\r\n    //     <Footer />\r\n    //   </div>\r\n    // </DataProvider>\r\n    <Router>\r\n      <div className='App'>\r\n\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <LoginScreen />\r\n          </Route>\r\n          <Route path='/my-task'>\r\n            <DataProvider>\r\n              <HomeScreen />\r\n            </DataProvider>\r\n          </Route>\r\n          <Route path='/sign-up'>\r\n            <SignupScreen />\r\n          </Route>\r\n          <Route>\r\n            <Redirect to='/' />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './_base.scss'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}